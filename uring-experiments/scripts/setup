#!/bin/bash

# Sets up everything needed to run experiments.
# Run with 'clean' as an argument to throw away
# compiled tools for rebuild/reinstall.

set -e

if [[ $(basename $(pwd)) == 'scripts' ]]; then
  echo 'Run this from the top level directory of the repo.'
  exit -1
fi

export DEBIAN_FRONTEND=noninteractive

setup_spdk() {
  if [ ! -f 'spdk/examples/nvme/perf/perf' ]; then
    git clone https://github.com/spdk/spdk.git || true

    FIOPATH=$(pwd)/fio

    pushd spdk

    git submodule update --init

    sudo ./scripts/pkgdep.sh

    ./configure --with-fio=$FIOPATH
    make

    popd
  else
    echo 'Skipping spdk; seems to already be compiled'
  fi
}

setup_fio() {
  if [ ! -f 'fio/fio' ]; then
    git clone https://github.com/axboe/fio.git || true
    pushd fio
    make
    popd
  else
    echo 'Skipping fio; seems to already be compiled'
  fi
}

setup_perf() {
  if [ "$(which perf)" == "" ]; then
    sudo apt-get install -y \
      linux-tools-generic \
      linux-cloud-tools-generic \
      linux-tools-$(uname -r)-generic \
      linux-cloud-tools-$(uname -r)-generic
  else
    echo 'perf already installed'
  fi
}

setup_plotting() {
  pip3 install seaborn
}

if [ "$1" == "clean" ]; then
  rm -rf spdk fio
else
  setup_fio
  setup_spdk
  setup_perf

  sudo apt-get install -y smartmontools python3-pip

  setup_plotting

  dir="$(dirname "$0")"
  source "$dir/../config.sh"

  for dev in "${DEVS[@]}"; do
    echo "Setting 0666 on $dev"
    sudo chmod ugo+rw "$dev"
    nvmeparent=$(echo "$dev" | sed 's/n[0-9]$//')
    if [ "$nvmeparent" != "$dev" ]; then
      echo "Setting 0666 on NVMe parent $nvmeparent"
      sudo chmod ugo+rw "$nvmeparent"
    fi
  done
fi

